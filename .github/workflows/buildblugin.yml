name: Build Plugin

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Set up Node.js (Node 20) with updated action
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Checkout code with updated action version
      - name: Checkout code
        uses: actions/checkout@v4

      # Install GitHub CLI
      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      # Generate Changelog
      - name: Generate Changelog
        id: changelog
        run: |
          latest_tag=$(git describe --tags --abbrev=0)
          changelog=$(git log ${latest_tag}..HEAD --pretty=format:"* %s: %b ([View Commit](https://github.com/${{ github.repository }}/commit/%H))" --no-merges)
          echo "changelog=$changelog" >> $GITHUB_ENV

      # Build Plugin Zip
      - name: Build Plugin Zip
        run: zip -r slm-plus.zip . -x '*.git*' '*.github*'

      # Import GPG Key
      - name: Import GPG Key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import

      # Sign the Plugin Zip with updated flag
      - name: Sign Plugin Zip
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "$GPG_PASSPHRASE" | gpg --batch --yes --pinentry-mode loopback --passphrase-fd 0 --detach-sign -a slm-plus.zip

      # Authenticate GitHub CLI non-interactively
      - name: Authenticate GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: gh auth setup-git

      # Upload Release Asset and Signature with `gh`
      - name: Upload Release Assets with `gh`
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          gh release upload "${{ github.event.release.tag_name }}" "./slm-plus.zip" --clobber
          gh release upload "${{ github.event.release.tag_name }}" "./slm-plus.zip.asc" --clobber

      # Update Release with Changelog
      - name: Update Release Description
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/${{ github.repository }}/releases/${{ github.event.release.id }}
          release_id: ${{ github.event.release.id }}
          description: |
            ## Changelog
            ${{ env.changelog }}
